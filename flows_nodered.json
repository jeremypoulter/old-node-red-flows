[{"type":"tab","id":"7e4a5521.81b5ac","label":"SRF Nodes"},{"type":"tab","id":"1c15f000.e3ea1","label":"OpenTRV"},{"type":"tab","id":"c3bd7e1c.3c428","label":"TCP Server"},{"id":"73f3572b.8c0ca8","type":"subflow","name":"TCP Server","in":[{"x":448,"y":424,"wires":[{"id":"ca4e42be.35b1c"}]}],"out":[{"x":725,"y":424,"wires":[{"id":"ca4e42be.35b1c","port":1}]}]},{"id":"74b9dce1.8b4624","type":"serial-port","serialport":"/dev/ttyAMA0","serialbaud":"115200","databits":"8","parity":"none","stopbits":"1","newline":"50","bin":"false","out":"time","addchar":false},{"id":"42ebbc98.bd1444","type":"emoncms-server","z":"","server":"http://emonbase.local/emoncms/","name":"EmonBase"},{"id":"c2a5d78d.3d5a28","type":"emoncms-server","z":"","server":"http://emoncms.org/","name":"Emoncms"},{"id":"2459e05.fdba62","type":"serial-port","serialport":"/dev/ttyUSB0","serialbaud":"4800","databits":"8","parity":"none","stopbits":"1","newline":"\\n","bin":"false","out":"char","addchar":true},{"id":"93a50677.6c5af8","type":"emoncms-server","z":"","server":"http://172.16.0.75/emoncms/","name":"Moonshade"},{"id":"98d0c796.672f38","type":"catch","z":"7e4a5521.81b5ac","name":"","x":479,"y":65,"wires":[["bad3bfe8.452c4","727e5335.8d81ac"]]},{"id":"bad3bfe8.452c4","type":"debug","z":"7e4a5521.81b5ac","name":"","active":true,"console":"false","complete":"true","x":645,"y":48,"wires":[]},{"id":"7d7c0abd.8283f4","type":"serial in","z":"7e4a5521.81b5ac","name":"SRF","serial":"74b9dce1.8b4624","x":95,"y":354,"wires":[["fc5039a9.03afc8","b27242f0.4d8dc"]]},{"id":"e0b64602.1f49b8","type":"debug","z":"7e4a5521.81b5ac","name":"","active":false,"console":"false","complete":"false","x":745,"y":378,"wires":[]},{"id":"9be944be.6416b8","type":"function","z":"7e4a5521.81b5ac","name":"LLAP Parse","func":"var receivedPackets = msg.payload.match(/a[-#@?\\\\*A-Z]{2}[- !\"#%&'()+,-./:;<=?@[\\\\\\]^_0-9A-Z]{9}/g);\nif(null === receivedPackets) {\n    return null;\n}\n\nvar newMsg = { payload: { id: \"--\", packets: [] } };\nfor(var i =0; i < receivedPackets.length; i++)\n{\n    var item = receivedPackets[i];\n    var parts = item.match(/a([-#@?\\\\*A-Z]{2})([- !\"#%&'()+,-./:;<=?@[\\\\\\]^_0-9A-Z]{9})/);\n\n    var id = parts[1];\n    var data = parts[2];\n    \n    // TODO: actually check all the messages are from the same node\n    newMsg.payload.id = id;\n    \n    // Most messages are some ALPHA chars followed by a number and \n    // padded with -\n    var parts = data.match(/^([A-Z]+)([.0-9]+)-*$/);\n    if(null !== parts) {\n        newMsg.payload.packets.push(parts);\n    } else {\n        newMsg.payload.packets.push(data);\n    }\n}\n\nreturn newMsg;","outputs":1,"noerr":0,"x":540,"y":460,"wires":[["e0b64602.1f49b8","6871ddc7.978e24","79f203b8.860dfc"]]},{"id":"6331a2a1.9cce5c","type":"emoncms","z":"7e4a5521.81b5ac","name":"EmonBase","emonServer":"42ebbc98.bd1444","nodegroup":"25","x":1230,"y":460,"wires":[]},{"id":"1e443615.e1bbca","type":"function","z":"7e4a5521.81b5ac","name":"Prepare for EmonCMS","func":"var newMsg = { payload: \"\" };\n\nif('LP' == msg.payload.id) {\n    newMsg.nodegroup = 25;\n}\n\nvar comma = '';\nfor(var i=0; i < msg.payload.packets.length; i++)\n{\n    newMsg.payload += comma+msg.payload.packets[i][1]+\n                        ':'+msg.payload.packets[i][2];\n    comma = ',';\n}\n\nreturn newMsg;\n","outputs":1,"noerr":0,"x":981,"y":462,"wires":[["aba16900.545e98","cd812f82.327ed"]]},{"id":"aba16900.545e98","type":"debug","z":"7e4a5521.81b5ac","name":"","active":false,"console":"false","complete":"true","x":1210,"y":388,"wires":[]},{"id":"cd812f82.327ed","type":"emoncms","z":"7e4a5521.81b5ac","name":"Emoncms","emonServer":"c2a5d78d.3d5a28","nodegroup":"25","x":1220,"y":500,"wires":[]},{"id":"6871ddc7.978e24","type":"function","z":"7e4a5521.81b5ac","name":"5 min change","func":"// Duration to calculate the change over\nvar timePeriod = 5 * 60;\n//var timePeriod = 30;\n\n// Get the TEMP value\nfor(var i=0; i < msg.payload.packets.length; i++)\n{\n    if(\"TEMP\" == msg.payload.packets[i][1])\n    {\n        value = msg.payload.packets[i][2];\n    }\n}\n\n// initialise our state if it doesn't exist already\ncontext.lastTime = context.lastTime || Date.now();\ncontext.lastValue = context.lastValue || value;\n\n// Work out the change in time an our value\nelapsed = (Date.now() - context.lastTime) / 1000;\nchange = ((value - context.lastValue) / (elapsed / 60)).toFixed(2);\n\n// Stick some debugging in the message\nmsg.debug = {\n    lastTime: context.lastTime,\n    currentTime: Date.now(),\n    elapsed: elapsed,\n    lastValue: context.lastValue,\n    currentValue: value,\n    change: change\n}\n\n// When we have passed timePeriod seconds add the change to the packets\nif(elapsed >= timePeriod)\n{\n    msg.payload.packets[msg.payload.packets.length] = [ \"TEMP_CHANGE\"+change, \"TEMP_CHANGE\", change];\n    \n    context.lastTime = Date.now();\n    context.lastValue = value;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":741,"y":462,"wires":[["b496d2a.f4b693","1e443615.e1bbca"]]},{"id":"b496d2a.f4b693","type":"debug","z":"7e4a5521.81b5ac","name":"","active":false,"console":"false","complete":"true","x":962,"y":374,"wires":[]},{"id":"33bcbe8.fcc4342","type":"catch","z":"1c15f000.e3ea1","name":"","x":200,"y":80,"wires":[["bf577327.40a89","7812f0d2.87ed1"]]},{"id":"bf577327.40a89","type":"debug","z":"1c15f000.e3ea1","name":"","active":true,"console":"false","complete":"true","x":370,"y":60,"wires":[]},{"id":"9342b85.f6cbd48","type":"http request","z":"7e4a5521.81b5ac","name":"","method":"GET","ret":"txt","url":"","x":1005,"y":606,"wires":[["66732c73.998cd4"]]},{"id":"66732c73.998cd4","type":"debug","z":"7e4a5521.81b5ac","name":"","active":false,"console":"false","complete":"true","x":1197,"y":605,"wires":[]},{"id":"79f203b8.860dfc","type":"function","z":"7e4a5521.81b5ac","name":"Prepare for Adafruit.IO","func":"var newMsg = { \n    url: \"https://io.adafruit.com/api/groups/temp/send.json?x-aio-key=890eca0a9d0a4deedd54446faa952ebbe6d8b968\",\n    payload: \"\"\n};\n\nfor(var i=0; i < msg.payload.packets.length; i++)\n{\n    switch(msg.payload.packets[i][1])\n    {\n        case \"TEMP\":\n            newMsg.url += \"&temp=\"+msg.payload.packets[i][2];\n            break;\n        case \"BATT\":\n            newMsg.url += \"&batt=\"+msg.payload.packets[i][2];\n            break;\n    }\n}\n            \nreturn newMsg;\n","outputs":1,"noerr":0,"x":776,"y":607,"wires":[["9342b85.f6cbd48","ae2b1f8b.51d4e"]]},{"id":"ae2b1f8b.51d4e","type":"debug","z":"7e4a5521.81b5ac","name":"","active":false,"console":"false","complete":"true","x":1000,"y":694,"wires":[]},{"id":"ba06221c.45f9e","type":"inject","z":"7e4a5521.81b5ac","name":"Configure SRF","topic":"configure","payload":"+++","payloadType":"string","repeat":"","crontab":"","once":true,"x":128,"y":261,"wires":[["200eb3be.dff14c"]]},{"id":"c27ecf47.3d813","type":"serial out","z":"7e4a5521.81b5ac","name":"","serial":"74b9dce1.8b4624","x":747,"y":260,"wires":[]},{"id":"fc5039a9.03afc8","type":"switch","z":"7e4a5521.81b5ac","name":"","property":"payload","rules":[{"t":"cont","v":"OK"},{"t":"else"}],"checkall":"false","outputs":2,"x":305,"y":353,"wires":[["15e8aa1e.ea1756"],["9be944be.6416b8"]]},{"id":"15e8aa1e.ea1756","type":"function","z":"7e4a5521.81b5ac","name":"Send Config","func":"\nvar config = [\n    \"ATLIR\"\n];\n\nvar newMsg = null;\n\nswitch(msg.payload)\n{\n    case \"+++\":\n        context.state = 0;\n        newMsg = { payload: \"+++\" };\n        break;\n    case \"OK\\r\":\n        if(context.state < config.length)\n        {\n            newMsg = { payload: config[context.state]+\"\\r\" };\n            context.state++;\n        }\n        break;\n}\nreturn newMsg;","outputs":1,"noerr":0,"x":539,"y":260,"wires":[["c27ecf47.3d813","24d04e83.db2fb2"]]},{"id":"200eb3be.dff14c","type":"delay","z":"7e4a5521.81b5ac","name":"","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":327,"y":260,"wires":[["15e8aa1e.ea1756"]]},{"id":"f40402ae.0bfc","type":"tcp out","z":"c3bd7e1c.3c428","host":"","port":"5678","beserver":"reply","base64":false,"end":false,"name":"Reply to TCP","x":816,"y":157,"wires":[]},{"id":"27914082.d86ec","type":"tcp in","z":"c3bd7e1c.3c428","name":"TCP Server","server":"server","host":"","port":"5678","datamode":"stream","datatype":"utf8","newline":"","topic":"tcp-input","base64":false,"x":368,"y":170,"wires":[["e97096d5.168f68"]]},{"id":"f902d1c0.06fd3","type":"inject","z":"c3bd7e1c.3c428","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":371,"y":249,"wires":[["e97096d5.168f68"]]},{"id":"ff1959af.00e6a8","type":"debug","z":"c3bd7e1c.3c428","name":"TCP out","active":true,"console":"false","complete":"true","x":802,"y":199,"wires":[]},{"id":"402403f5.bfdbfc","type":"debug","z":"c3bd7e1c.3c428","name":"TCP in","active":true,"console":"false","complete":"true","x":797,"y":254,"wires":[]},{"id":"a1fb70c4.5e049","type":"tcp out","z":"73f3572b.8c0ca8","host":"","port":"5678","beserver":"reply","base64":false,"end":false,"name":"Reply to TCP","x":778,"y":360,"wires":[]},{"id":"559985d2.aa667c","type":"tcp in","z":"73f3572b.8c0ca8","name":"TCP Server","server":"server","host":"","port":"1234","datamode":"stream","datatype":"utf8","newline":"","topic":"tcp-input","base64":false,"x":409,"y":363,"wires":[["ca4e42be.35b1c"]]},{"id":"ca4e42be.35b1c","type":"function","z":"73f3572b.8c0ca8","name":"Broker","func":"\n\nswitch(msg.topic)\n{\n    case 'tcp-input':\n    {\n        var out = null;\n        if(!context.session) {\n            context.session = msg._session;\n            out = {payload: \"Connected\\r\\n\", _session: msg._session};\n        }\n        return [out, msg];\n    }\n}\n\nmsg._session = context.session;\nreturn [msg, null];","outputs":"2","noerr":0,"x":588,"y":396,"wires":[["a1fb70c4.5e049"],[]]},{"id":"e97096d5.168f68","type":"function","z":"c3bd7e1c.3c428","name":"Broker","func":"\n\nswitch(msg.topic)\n{\n    case 'tcp-input':\n    {\n        var out = null;\n        if(!context.session) {\n            context.session = msg._session;\n            out = {payload: \"Connected\\r\\n\", _session: msg._session};\n        }\n        return [out, msg];\n    }\n}\n\nmsg._session = context.session;\nreturn [msg, null];","outputs":"2","noerr":0,"x":595,"y":219,"wires":[["f40402ae.0bfc","ff1959af.00e6a8"],["402403f5.bfdbfc"]]},{"id":"24d04e83.db2fb2","type":"debug","z":"7e4a5521.81b5ac","name":"","active":false,"console":"false","complete":"false","x":753,"y":193,"wires":[]},{"id":"b27242f0.4d8dc","type":"debug","z":"7e4a5521.81b5ac","name":"","active":false,"console":"false","complete":"false","x":299,"y":432,"wires":[]},{"id":"d2c78f96.2d387","type":"serial in","z":"1c15f000.e3ea1","name":"OpenTRV serial","serial":"2459e05.fdba62","x":240,"y":300,"wires":[["846cc2f5.7b934","849b6db2.7b649","e4ce65f7.1b3198","aee64709.e4cee8"]]},{"id":"846cc2f5.7b934","type":"debug","z":"1c15f000.e3ea1","name":"","active":false,"console":"false","complete":"true","x":450,"y":320,"wires":[]},{"id":"d22a01b5.2dd6","type":"switch","z":"1c15f000.e3ea1","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":">","vt":"str"},{"t":"regex","v":"^=","vt":"str","case":false},{"t":"regex","v":"^{.*}$","vt":"str","case":false},{"t":"regex","v":"^\\s*$","vt":"str","case":false},{"t":"else"}],"checkall":"false","outputs":5,"x":570,"y":460,"wires":[["fd43c6fc.02bc38","2689f87e.d97608"],["5e9b5e52.a164a","58e99141.a7167"],["1b304865.e4cfb8","439e712f.bc619"],[],["c3061c2e.3cf9e"]]},{"id":"849b6db2.7b649","type":"subflow:73f3572b.8c0ca8","z":"1c15f000.e3ea1","name":"","x":827,"y":186,"wires":[["ba2b7818.45d488"]]},{"id":"fd43c6fc.02bc38","type":"function","z":"1c15f000.e3ea1","name":"Send command","func":"\nvar config = [\n    \"?\"\n];\n\nvar newMsg = null;\n\nif(context.state < config.length)\n{\n    newMsg = { payload: config[context.state]+\"\\r\\n\" };\n    context.state++;\n}\n\nreturn newMsg;","outputs":1,"noerr":0,"x":820,"y":320,"wires":[["ba2b7818.45d488","1a67efb6.e5981"]]},{"id":"2689f87e.d97608","type":"debug","z":"1c15f000.e3ea1","name":"","active":false,"console":"false","complete":"false","x":810,"y":280,"wires":[]},{"id":"5e9b5e52.a164a","type":"debug","z":"1c15f000.e3ea1","name":"","active":true,"console":"false","complete":"false","x":810,"y":380,"wires":[]},{"id":"58e99141.a7167","type":"function","z":"1c15f000.e3ea1","name":"OpenTRV Parse status","func":"var newMsg = {  };\n\nvar parts = msg.payload.match(/^=(F|W|B)([0-9]+)\\%\\@([0-9]+)C([0-9A-F]+)(;X([0-9]+) *)?;?(T([0-9]+ [0-9]+) ([^;]*))?;?(S([0-9]+) ([0-9]+) ([0-9]+))?;?(H([0-9]+ [0-9]+)*)?;?.*{(.*)}$/);\n\nnewMsg.payload = {\n    //'raw': parts,\n    'frost': 'F' == parts[1] ? 1 : 0,\n    'warm': 'W' == parts[1] ? 1 : 0,\n    'bake': 'B' == parts[1] ? 1 : 0,\n    'valve': parts[2],\n    'temp': parseInt(parts[3]) + (parseInt(\"0x\"+parts[4]) / 16)\n};\n\n// Security, 5-6\nif(null !== parts[5]) {\n}\n\n// Time, 7-8\nif(null !== parts[7]) {\n}\n\n// Program, 9\nif(null !== parts[9]) {\n}\n\n// Target temps, 10-13\nif(null !== parts[10]) \n{\n    newMsg.payload.nominalTarget = parseInt(parts[11]);\n    newMsg.payload.frostTarget = parseInt(parts[12]);\n    newMsg.payload.warmTarget = parseInt(parts[13]);\n}\n\n// House code, 14-15\nif(null !== parts[14]) {\n}\n\n// JSON block, 16\nif(null !== parts[16]) \n{\n    newMsg.json = '{'+parts[16]+'}';\n}\n\nreturn newMsg;","outputs":1,"noerr":0,"x":850,"y":420,"wires":[["c4a2746c.3b5d88","439e712f.bc619"]]},{"id":"c3061c2e.3cf9e","type":"debug","z":"1c15f000.e3ea1","name":"","active":false,"console":"false","complete":"false","x":810,"y":540,"wires":[]},{"id":"ba2b7818.45d488","type":"serial out","z":"1c15f000.e3ea1","name":"OpenTRV serial","serial":"2459e05.fdba62","x":1200,"y":260,"wires":[]},{"id":"1a67efb6.e5981","type":"debug","z":"1c15f000.e3ea1","name":"","active":false,"console":"false","complete":"false","x":1190,"y":320,"wires":[]},{"id":"3cad8960.c35276","type":"function","z":"1c15f000.e3ea1","name":"Map ID for EmonCMS","func":"var nodeMapping = {\n    'f9ea': 26,\n    'a7de': 27\n};\n\nif(msg.nodeid && nodeMapping[msg.nodeid]) {\n    msg.nodegroup = nodeMapping[msg.nodeid];\n}\n\nreturn msg;\n","outputs":1,"noerr":0,"x":1440,"y":460,"wires":[["8f8308e.f707cf8","a661e4f7.599e18"]]},{"id":"c4a2746c.3b5d88","type":"debug","z":"1c15f000.e3ea1","name":"","active":false,"console":"false","complete":"true","x":1090,"y":400,"wires":[]},{"id":"8f8308e.f707cf8","type":"debug","z":"1c15f000.e3ea1","name":"","active":false,"console":"false","complete":"true","x":1660,"y":400,"wires":[]},{"id":"730b8a42.8cf474","type":"emoncms","z":"1c15f000.e3ea1","name":"EmonBase","emonServer":"42ebbc98.bd1444","nodegroup":"","x":1680,"y":460,"wires":[]},{"id":"a661e4f7.599e18","type":"emoncms","z":"1c15f000.e3ea1","name":"Emoncms","emonServer":"c2a5d78d.3d5a28","nodegroup":"","x":1673,"y":520,"wires":[]},{"id":"c82dc948.37d238","type":"status","z":"c3bd7e1c.3c428","name":"","scope":null,"x":379,"y":367,"wires":[["57b44656.a84bb8"]]},{"id":"57b44656.a84bb8","type":"debug","z":"c3bd7e1c.3c428","name":"","active":true,"console":"false","complete":"true","x":582,"y":366,"wires":[]},{"id":"1b304865.e4cfb8","type":"debug","z":"1c15f000.e3ea1","name":"","active":true,"console":"false","complete":"false","x":810,"y":500,"wires":[]},{"id":"439e712f.bc619","type":"function","z":"1c15f000.e3ea1","name":"OpenTRV Parse JSON","func":"var json = \"\";\nif(msg.json) \n{\n    json = msg.json\n}\nelse\n{\n    json = msg.payload;\n    msg.payload = {};\n}\n\nvar obj = JSON.parse(json);\nfor(var i in obj) \n{\n    switch(i)\n    {\n        case '@':\n            msg.nodeid = obj['@'];\n            break;\n        case 'T|C16':\n            var temp16 = parseInt(obj[i]);\n            var temp = ((temp16 & ~0xf) >> 4) + \n                       ((temp16 & 0xf) / 16);\n            msg.payload.temp = temp;\n            break;\n        case 'B|cV':\n            msg.payload.battery = parseInt(obj[i]) * 10;\n            break;\n        default:\n            var mapping = {\n                'B|mV': 'battery',\n                'occ|%': 'occupancy',\n                'v|%': 'valve',\n                'O': 'occupancyState',\n                'vac|h': 'vacancyHours',\n                'L': 'ambientLight',\n                'H|%': 'humidity',\n                'vC|%': 'cumulativeValveMovement',\n                'tT|C': 'nominalTarget'\n            }\n            \n            if(mapping[i]) {\n                msg.payload[mapping[i]] = obj[i];\n            }\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1150,"y":460,"wires":[["3cad8960.c35276","7fec21ac.8013e"]]},{"id":"e4ce65f7.1b3198","type":"function","z":"1c15f000.e3ea1","name":"Trim","func":"msg.payload = msg.payload.trim();\nreturn msg;\n","outputs":1,"noerr":0,"x":430,"y":460,"wires":[["d22a01b5.2dd6"]]},{"id":"7fec21ac.8013e","type":"debug","z":"1c15f000.e3ea1","name":"","active":false,"console":"false","complete":"true","x":1390,"y":400,"wires":[]},{"id":"22e5080f.dd1af8","type":"e-mail","z":"7e4a5521.81b5ac","server":"smtp.gmail.com","port":"465","name":"jeremy@bigjungle.net","dname":"Node-RED","x":850,"y":100,"wires":[]},{"id":"e00428e3.1ffbd8","type":"e-mail","z":"1c15f000.e3ea1","server":"smtp.gmail.com","port":"465","name":"jeremy@bigjungle.net","dname":"Node-RED","x":590,"y":120,"wires":[]},{"id":"727e5335.8d81ac","type":"function","z":"7e4a5521.81b5ac","name":"Error email","func":"var newMsg = { payload: JSON.stringify(msg, null, '  ') };\nreturn newMsg;","outputs":1,"noerr":0,"x":670,"y":100,"wires":[["22e5080f.dd1af8"]]},{"id":"7812f0d2.87ed1","type":"function","z":"1c15f000.e3ea1","name":"JSON Stringify","func":"var newMsg = { payload: JSON.stringify(msg, null, '  ') };\nreturn newMsg;","outputs":1,"noerr":0,"x":400,"y":120,"wires":[["e00428e3.1ffbd8"]]},{"id":"aee64709.e4cee8","type":"udp out","z":"1c15f000.e3ea1","name":"","addr":"172.16.0.81","iface":"","port":"1234","ipv":"udp4","outport":"","base64":false,"multicast":"false","x":491,"y":193,"wires":[]}]